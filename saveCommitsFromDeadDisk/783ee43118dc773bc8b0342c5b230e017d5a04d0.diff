commit 783ee43118dc773bc8b0342c5b230e017d5a04d0 6fb8cc82c096fd5ccf277678639193cae07125a0
Author:     Andrzej Zaborowski <andrew.zaborowski@intel.com>
AuthorDate: Mon Jun 9 16:50:40 2014 +0200
Commit:     Matt Fleming <matt.fleming@intel.com>
CommitDate: Fri Jun 27 07:30:32 2014 +0100

    efi-pstore: Fix an overflow on 32-bit builds
    
    In generic_id the long int timestamp is multiplied by 100000 and needs
    an explicit cast to u64.
    
    Without that the id in the resulting pstore filename is wrong and
    userspace may have problems parsing it, but more importantly files in
    pstore can never be deleted and may fill the EFI flash (brick device?).
    This happens because when generic pstore code wants to delete a file,
    it passes the id to the EFI backend which reinterpretes it and a wrong
    variable name is attempted to be deleted.  There's no error message but
    after remounting pstore, deleted files would reappear.
    
    Signed-off-by: Andrew Zaborowski <andrew.zaborowski@intel.com>
    Acked-by: David Rientjes <rientjes@google.com>
    Cc: <stable@vger.kernel.org>
    Signed-off-by: Matt Fleming <matt.fleming@intel.com>

1	1	drivers/firmware/efi/efi-pstore.c

diff --git a/drivers/firmware/efi/efi-pstore.c b/drivers/firmware/efi/efi-pstore.c
index 4b9dc83..e992abc 100644
--- a/drivers/firmware/efi/efi-pstore.c
+++ b/drivers/firmware/efi/efi-pstore.c
@@ -40,7 +40,7 @@ struct pstore_read_data {
 static inline u64 generic_id(unsigned long timestamp,
 			     unsigned int part, int count)
 {
-	return (timestamp * 100 + part) * 1000 + count;
+	return ((u64) timestamp * 100 + part) * 1000 + count;
 }
 
 static int efi_pstore_read_func(struct efivar_entry *entry, void *data)
