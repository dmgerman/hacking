/*
 * $Id: AuthorViewPanel.java,v 1.1 2004/12/07 17:53:23 bdickie Exp $
 *
 * Repository Explorer and Repository Grapher
 * Copyright (C) 2004 Blake Dickie
 *
 * This program is free software; you can redistribute it and/or modify 
 * it under the terms of the GNU General Public License as published by 
 * the Free Software Foundation; either version 2 of the License, or 
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program; if not, write to the Free Software 
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
 * MA 02111-1307 USA
 *
 */

package ca.uvic.cs.gold.bdickie.graphview.AuthorsView;

import java.awt.Color;
import javax.swing.*;
import java.util.*;

import ca.uvic.cs.gold.bdickie.explorer.NonEditableTableModel;
import ca.uvic.cs.gold.bdickie.fs.*;
import ca.uvic.cs.gold.bdickie.db.DBConnection;

/** The information Panel for an AuthorsViewMode graph.
 *
 * @author  Blake Dickie
 */
public class AuthorViewPanel extends javax.swing.JPanel {
    private NonEditableTableModel tableModel;
    private Vector edits;
    
    private static final String[] columnNames = {"Author", "Modifications"};
    
    /** Creates new form AuthorViewPanel */
    public AuthorViewPanel(Vector edits) {
        this.edits = edits;
        tableModel = new NonEditableTableModel(columnNames);
        initComponents();
    }
    
    public void addAuthor(String author, int mods, Color c)
    {
        JLabel label = new JLabel();
        label.setText(author + " - " + mods);
        label.setBackground(c);
        label.setOpaque(true);
        panAuthors.add(label);
    }
    
    public void setFile(File f)
    {
        while(tableModel.getRowCount() > 0)
            tableModel.removeRow(0);
        
        Iterator i = edits.iterator();
        while(i.hasNext())
        {
            Vector v = (Vector)i.next();
            if (f.getPath().equals(v.get(0)))
            {
                Object[] items = {v.get(1), v.get(2)};
                tableModel.addRow(items);
            }
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panAuthors = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setLayout(new java.awt.GridLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 100));
        panAuthors.setLayout(new java.awt.GridLayout(0, 1));

        jScrollPane1.setViewportView(panAuthors);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel1);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setPreferredSize(new java.awt.Dimension(300, 100));
        jTable1.setModel(tableModel);
        jScrollPane2.setViewportView(jTable1);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        add(jPanel2);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel panAuthors;
    // End of variables declaration//GEN-END:variables
    
}

/* ChangeLog:
 *   $Log: AuthorViewPanel.java,v $
 *   Revision 1.1  2004/12/07 17:53:23  bdickie
 *   Done Repository Grapher and added GPL boilerplate to older files.
 *
 */
