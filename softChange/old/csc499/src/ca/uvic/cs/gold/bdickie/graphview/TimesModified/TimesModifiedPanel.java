/*
 * $Id: TimesModifiedPanel.java,v 1.1 2004/12/07 17:53:23 bdickie Exp $
 *
 * Repository Explorer and Repository Grapher
 * Copyright (C) 2004 Blake Dickie
 *
 * This program is free software; you can redistribute it and/or modify 
 * it under the terms of the GNU General Public License as published by 
 * the Free Software Foundation; either version 2 of the License, or 
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program; if not, write to the Free Software 
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
 * MA 02111-1307 USA
 *
 */

package ca.uvic.cs.gold.bdickie.graphview.TimesModified;

import java.util.*;

import ca.uvic.cs.gold.bdickie.fs.*;
import ca.uvic.cs.gold.bdickie.explorer.NonEditableTableModel;
import ca.uvic.cs.gold.bdickie.db.DBConnection;

/** The information panel for a TimesModifiedView mode.
 *
 * @author  Blake Dickie
 */
public class TimesModifiedPanel extends javax.swing.JPanel {
    private NonEditableTableModel mainModel;
    private static final String[] columnNames =  new String [] {
        "Revision", "Type", "Date", "Time", "MR"};
    private Date startDate;
    private Date endDate;
        
    /** Creates new form TimesModifiedPanel */
    public TimesModifiedPanel(TimesModifiedView view, Date startDate, Date endDate) {
        mainModel = new NonEditableTableModel(columnNames);
        this.startDate = startDate;
        this.endDate = endDate;
        initComponents();
    }
    
    public void setFile(DirectoryContent c)
    {
        lblFilename.setText(c.getFilename());
        while(mainModel.getRowCount() > 0)
            mainModel.removeRow(0);
        Vector data = DBConnection.getInstance().getRevisions((File)c, startDate, endDate);
        lblTimesModified.setText(String.valueOf(data.size()));
        Iterator i = data.iterator();
        while(i.hasNext())
            mainModel.addRow((Vector)i.next());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblFilename = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblTimesModified = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Filename:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jLabel1, gridBagConstraints);

        lblFilename.setPreferredSize(new java.awt.Dimension(15, 15));
        lblFilename.setMaximumSize(new java.awt.Dimension(15, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(lblFilename, gridBagConstraints);

        jLabel3.setText("Times Modified:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        lblTimesModified.setPreferredSize(new java.awt.Dimension(15, 15));
        lblTimesModified.setMaximumSize(new java.awt.Dimension(15, 15));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel1.add(lblTimesModified, gridBagConstraints);

        add(jPanel1);

        add(jPanel3);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jScrollPane1.setPreferredSize(new java.awt.Dimension(453, 100));
        jTable1.setModel(mainModel);
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel2);

    }//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblFilename;
    private javax.swing.JLabel lblTimesModified;
    // End of variables declaration//GEN-END:variables
    
}

/* ChangeLog:
 *   $Log: TimesModifiedPanel.java,v $
 *   Revision 1.1  2004/12/07 17:53:23  bdickie
 *   Done Repository Grapher and added GPL boilerplate to older files.
 *
 */
