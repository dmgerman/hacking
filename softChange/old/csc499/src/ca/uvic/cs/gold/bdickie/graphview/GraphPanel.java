/*
 * $Id: GraphPanel.java,v 1.1 2004/12/07 17:53:23 bdickie Exp $
 *
 * Repository Explorer and Repository Grapher
 * Copyright (C) 2004 Blake Dickie
 *
 * This program is free software; you can redistribute it and/or modify 
 * it under the terms of the GNU General Public License as published by 
 * the Free Software Foundation; either version 2 of the License, or 
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but 
 * WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU 
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License 
 * along with this program; if not, write to the Free Software 
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, 
 * MA 02111-1307 USA
 *
 */

package ca.uvic.cs.gold.bdickie.graphview;

import javax.swing.*;
import java.util.*;
import java.awt.*;
import javax.swing.filechooser.*;

import ca.uvic.cs.gold.bdickie.graphview.framework.*;
import ca.uvic.cs.gold.bdickie.db.DBConnection;
import ca.uvic.cs.gold.bdickie.MRSInfo;

/** The panel that contains the graph.  Doesn't actually do much itself,
 *  more provides a layout to insert the other componenets into.
 *
 * @author  Blake Dickie
 */
public class GraphPanel extends javax.swing.JPanel {
    private Graph graph;
    
    private Frame parent;
    
    /** Creates new form GraphPanel */
    public GraphPanel(Graph g, Frame parent) {
        graph = g;
        this.parent = parent;
        
        
        
        initComponents();
        
        JScrollPane scroll = new JScrollPane(graph.getDisplay());
        scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
        scroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        panMainDisplay.add(scroll);
        
        panUserArea.add(g.getSettings().getViewMode().getControlPane());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        panMainDisplay = new javax.swing.JPanel();
        panLowerPanel = new javax.swing.JPanel();
        panOpions = new javax.swing.JPanel();
        butLayerDepth = new javax.swing.JButton();
        butSaveImage = new javax.swing.JButton();
        butExport = new javax.swing.JButton();
        panUserArea = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        panMainDisplay.setLayout(new java.awt.BorderLayout());

        add(panMainDisplay, java.awt.BorderLayout.CENTER);

        panLowerPanel.setLayout(new java.awt.BorderLayout());

        panOpions.setLayout(new java.awt.GridBagLayout());

        butLayerDepth.setText("Layer Depth");
        butLayerDepth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butLayerDepthActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panOpions.add(butLayerDepth, gridBagConstraints);

        butSaveImage.setText("Save Image");
        butSaveImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSaveImageActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panOpions.add(butSaveImage, gridBagConstraints);

        butExport.setText("Export XML");
        butExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butExportActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panOpions.add(butExport, gridBagConstraints);

        panLowerPanel.add(panOpions, java.awt.BorderLayout.WEST);

        panLowerPanel.add(panUserArea, java.awt.BorderLayout.CENTER);

        add(panLowerPanel, java.awt.BorderLayout.SOUTH);

    }//GEN-END:initComponents

    private void butExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butExportActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new XMLFileFilter());
        if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            String filename = chooser.getSelectedFile().getPath();
            if (!filename.endsWith(".xml"))
                filename = filename + ".xml";
            graph.generateXML(new java.io.File(filename));
        }
    }//GEN-LAST:event_butExportActionPerformed

    private void butLayerDepthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butLayerDepthActionPerformed
        graph.setLayerDepth(LayerDepthDialog.getLayerDepth(parent, graph.getLayerDepth()));
    }//GEN-LAST:event_butLayerDepthActionPerformed

    private void butSaveImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSaveImageActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new PNGFileFilter());
        if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            String filename = chooser.getSelectedFile().getPath();
            if (!filename.endsWith(".png"))
                filename = filename + ".png";
            graph.getDisplay().saveToFile(new java.io.File(filename));
        }
    }//GEN-LAST:event_butSaveImageActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butExport;
    private javax.swing.JButton butLayerDepth;
    private javax.swing.JButton butSaveImage;
    private javax.swing.JPanel panLowerPanel;
    private javax.swing.JPanel panMainDisplay;
    private javax.swing.JPanel panOpions;
    private javax.swing.JPanel panUserArea;
    // End of variables declaration//GEN-END:variables
    
    private class PNGFileFilter extends FileFilter
    {
        
        public boolean accept(java.io.File file) {
            return file.getName().toLowerCase().endsWith(".png") || file.isDirectory();
        }
        
        public String getDescription() {
            return "PNG Files";
        }
        
    }
    
    private class XMLFileFilter extends FileFilter
    {
        
        public boolean accept(java.io.File file) {
            return file.getName().toLowerCase().endsWith(".xml") || file.isDirectory();
        }
        
        public String getDescription() {
            return "XML Files";
        }
        
    }
}

/* ChangeLog:
 *   $Log: GraphPanel.java,v $
 *   Revision 1.1  2004/12/07 17:53:23  bdickie
 *   Done Repository Grapher and added GPL boilerplate to older files.
 *
 */
